#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Game Marketplace${NC}"
echo "=================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è endpoint'–∞
test_endpoint() {
    local url="$1"
    local expected_status="$2"
    local description="$3"
    
    echo -e "\n${YELLOW}üîç –¢–µ—Å—Ç–∏—Ä—É—é: ${description}${NC}"
    echo "URL: $url"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    response=$(curl -s -w "\n%{http_code}" "$url" 2>/dev/null)
    status_code=$(echo "$response" | tail -1)
    body=$(echo "$response" | head -n -1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–¥
    if [ "$status_code" = "$expected_status" ]; then
        echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å: $status_code (–æ–∂–∏–¥–∞–ª—Å—è $expected_status)${NC}"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –æ—Ç–≤–µ—Ç–∞
        if [ ! -z "$body" ]; then
            echo -e "${BLUE}üìÑ –û—Ç–≤–µ—Ç:${NC}"
            echo "$body" | head -3
            if [ $(echo "$body" | wc -l) -gt 3 ]; then
                echo "..."
            fi
        fi
    else
        echo -e "${RED}‚ùå –°—Ç–∞—Ç—É—Å: $status_code (–æ–∂–∏–¥–∞–ª—Å—è $expected_status)${NC}"
        echo -e "${RED}–û—à–∏–±–∫–∞: $body${NC}"
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ backend —Ä–∞–±–æ—Ç–∞–µ—Ç
echo -e "${BLUE}üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ backend —Å–µ—Ä–≤–µ—Ä–∞...${NC}"
if ! curl -s "http://localhost:8001/health" > /dev/null 2>&1; then
    echo -e "${YELLOW}‚ö†Ô∏è  Backend —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8001${NC}"
    echo -e "${YELLOW}–ó–∞–ø—É—Å–∫–∞—é backend —Å–µ—Ä–≤–µ—Ä...${NC}"
    
    cd /mnt/games/Projects/python-dev-env
    ./start_server.sh &
    BACKEND_PID=$!
    
    # –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    sleep 5
    
    if ! curl -s "http://localhost:8001/" > /dev/null 2>&1; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å backend —Å–µ—Ä–≤–µ—Ä${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Backend —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω${NC}"
fi

# –¢–µ—Å—Ç—ã API endpoints
echo -e "\n${BLUE}üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...${NC}"

# –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
test_endpoint "http://localhost:8001/" 200 "–ö–æ—Ä–Ω–µ–≤–æ–π endpoint"

# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API
test_endpoint "http://localhost:8001/docs" 200 "Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"

# Health check
test_endpoint "http://localhost:8001/health" 404 "Health check (–º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å)"

# API endpoints
test_endpoint "http://localhost:8001/api/games" 200 "–°–ø–∏—Å–æ–∫ –∏–≥—Ä"
test_endpoint "http://localhost:8001/api/lots" 200 "–°–ø–∏—Å–æ–∫ –ª–æ—Ç–æ–≤"
test_endpoint "http://localhost:8001/api/users" 404 "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∑–∞—â–∏—â–µ–Ω–Ω—ã–π endpoint)"

echo -e "\n${BLUE}üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ production build...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º production build
if curl -s "http://localhost:4000" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Production build –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 4000${NC}"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º SPA –º–∞—Ä—à—Ä—É—Ç—ã
    test_endpoint "http://localhost:4000" 200 "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (production)"
    test_endpoint "http://localhost:4000/catalog" 200 "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ (–¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å _redirects)"
    test_endpoint "http://localhost:4000/login" 200 "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ (–¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å _redirects)"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Production build –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 4000${NC}"
    echo -e "${YELLOW}–ó–∞–ø—É—Å–∫–∞—é production build...${NC}"
    
    cd /mnt/games/Projects/python-dev-env/GameMarketplace/frontend
    npx serve dist -p 4000 &
    
    sleep 3
    
    if curl -s "http://localhost:4000" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Production build –∑–∞–ø—É—â–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å production build${NC}"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
echo -e "\n${BLUE}üìä –ê–Ω–∞–ª–∏–∑ production build...${NC}"

cd /mnt/games/Projects/python-dev-env/GameMarketplace/frontend/dist

echo -e "${YELLOW}üìÅ –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:${NC}"
ls -lh assets/ | head -5

echo -e "\n${YELLOW}üìà –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä:${NC}"
total_size=$(du -sh . | cut -f1)
echo "–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä dist: $total_size"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ gzip —Å–∂–∞—Ç–∏—è
echo -e "\n${YELLOW}üóúÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∂–∞—Ç–∏—è:${NC}"
for file in assets/*.js assets/*.css; do
    if [ -f "$file" ]; then
        original=$(stat -c%s "$file")
        compressed=$(gzip -c "$file" | wc -c)
        ratio=$(( (original - compressed) * 100 / original ))
        filename=$(basename "$file")
        echo "$filename: $original bytes ‚Üí $compressed bytes (—ç–∫–æ–Ω–æ–º–∏—è $ratio%)"
        break  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    fi
done

echo -e "\n${GREEN}üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "${BLUE}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
echo "2. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:4000 –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ production build"
echo "3. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8001/docs –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API"
echo "4. –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Netlify!"