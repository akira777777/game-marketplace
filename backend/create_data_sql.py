import sqlite3
import hashlib


def create_test_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –ø—Ä—è–º—ã–µ SQL –∑–∞–ø—Ä–æ—Å—ã"""
    conn = sqlite3.connect("gamemarket.db")
    cursor = conn.cursor()

    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        hashed_password = hashlib.sha256("testpass123".encode()).hexdigest()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        cursor.execute("SELECT id FROM users WHERE email = ?", ("test@example.com",))
        user = cursor.fetchone()

        if not user:
            cursor.execute(
                """
                INSERT INTO users (username, email, hashed_password, is_active, display_name, bio)
                VALUES (?, ?, ?, ?, ?, ?)
            """,
                (
                    "testuser",
                    "test@example.com",
                    hashed_password,
                    True,
                    "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                    "–û–ø—ã—Ç–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü –∏–≥—Ä–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
                ),
            )
            user_id = cursor.lastrowid
        else:
            user_id = user[0]

        # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—ã
        games_data = [
            ("World of Warcraft", "–ö—É–ª—å—Ç–æ–≤–∞—è MMORPG –æ—Ç Blizzard", True),
            ("Counter-Strike 2", "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —à—É—Ç–µ—Ä", True),
            ("Dota 2", "–ü–æ–ø—É–ª—è—Ä–Ω–∞—è MOBA", True),
            ("Valorant", "–¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —à—É—Ç–µ—Ä –æ—Ç Riot", True),
        ]

        game_ids = []
        for name, description, is_active in games_data:
            cursor.execute("SELECT id FROM games WHERE name = ?", (name,))
            game = cursor.fetchone()

            if not game:
                cursor.execute(
                    """
                    INSERT INTO games (name, description, is_active)
                    VALUES (?, ?, ?)
                """,
                    (name, description, is_active),
                )
                game_ids.append(cursor.lastrowid)
            else:
                game_ids.append(game[0])

        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∏–≥—Ä—ã
        category_ids = []
        for i, game_id in enumerate(game_ids):
            cursor.execute(
                "SELECT id FROM categories WHERE name = ? AND game_id = ?",
                ("–ê–∫–∫–∞—É–Ω—Ç—ã", game_id),
            )
            category = cursor.fetchone()

            if not category:
                cursor.execute(
                    """
                    INSERT INTO categories (name, description, game_id, is_active)
                    VALUES (?, ?, ?, ?)
                """,
                    ("–ê–∫–∫–∞—É–Ω—Ç—ã", "–ò–≥—Ä–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã", game_id, True),
                )
                category_ids.append(cursor.lastrowid)
            else:
                category_ids.append(category[0])

        # –°–æ–∑–¥–∞–µ–º –ª–æ—Ç—ã
        lots_data = [
            (
                "WoW –∞–∫–∫–∞—É–Ω—Ç —Å —Ä–µ–¥–∫–∏–º–∏ –º–∞—É–Ω—Ç–∞–º–∏",
                "–ê–∫–∫–∞—É–Ω—Ç —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π —Ä–µ–¥–∫–∏—Ö –º–∞—É–Ω—Ç–æ–≤",
                15000,
                game_ids[0],
                category_ids[0],
            ),
            (
                "CS2 Prime Global Elite",
                "–ê–∫–∫–∞—É–Ω—Ç —Å —Ä–∞–Ω–≥–æ–º Global Elite",
                8500,
                game_ids[1],
                category_ids[1],
            ),
            (
                "Dota 2 Divine –∞–∫–∫–∞—É–Ω—Ç",
                "–í—ã—Å–æ–∫–∏–π —Ä–∞–Ω–≥ Divine",
                12000,
                game_ids[2],
                category_ids[2],
            ),
            (
                "Valorant Immortal —Ä–∞–Ω–≥",
                "–ê–∫–∫–∞—É–Ω—Ç —Å —Ä–∞–Ω–≥–æ–º Immortal",
                7500,
                game_ids[3],
                category_ids[3],
            ),
        ]

        for title, description, price, game_id, cat_id in lots_data:
            cursor.execute("SELECT id FROM lots WHERE title = ?", (title,))
            lot = cursor.fetchone()

            if not lot:
                cursor.execute(
                    """
                    INSERT INTO lots (title, description, price, game_id, seller_id, category_id, status)
                    VALUES (?, ?, ?, ?, ?, ?, ?)
                """,
                    (
                        title,
                        description,
                        price,
                        game_id,
                        user_id,
                        cat_id,
                        "active",
                    ),
                )

        conn.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: test@example.com / testpass123")
        print(f"üéÆ –ò–≥—Ä: {len(game_ids)}")
        print(f"üì¶ –õ–æ—Ç–æ–≤: {len(lots_data)}")

    except Exception as e:
        conn.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()
    finally:
        conn.close()


if __name__ == "__main__":
    create_test_data()
