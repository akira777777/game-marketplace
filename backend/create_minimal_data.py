#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–æ—Å—Ç—ã–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
"""
import sys
import os
import hashlib

sys.path.insert(0, os.path.abspath("."))

from app.core.database import get_db
from app.models import User, Game, Lot
from sqlalchemy.orm import Session


def simple_hash(password: str) -> str:
    """–ü—Ä–æ—Å—Ç–æ–µ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤"""
    return hashlib.sha256(password.encode()).hexdigest()


def create_test_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    db: Session = next(get_db())

    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = db.query(User).filter(User.email == "test@example.com").first()
        if not test_user:
            test_user = User(
                username="testuser",
                email="test@example.com",
                hashed_password=simple_hash("testpass123"),
                is_active=True,
                display_name="–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                bio="–û–ø—ã—Ç–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü –∏–≥—Ä–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
            )
            db.add(test_user)
            db.flush()

        # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—ã
        games_data = [
            {
                "name": "World of Warcraft",
                "description": "–ö—É–ª—å—Ç–æ–≤–∞—è MMORPG –æ—Ç Blizzard",
                "is_active": True,
            },
            {
                "name": "Counter-Strike 2",
                "description": "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —à—É—Ç–µ—Ä",
                "is_active": True,
            },
            {"name": "Dota 2", "description": "–ü–æ–ø—É–ª—è—Ä–Ω–∞—è MOBA", "is_active": True},
            {
                "name": "Valorant",
                "description": "–¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —à—É—Ç–µ—Ä –æ—Ç Riot",
                "is_active": True,
            },
        ]

        games = []
        for game_data in games_data:
            game = db.query(Game).filter(Game.name == game_data["name"]).first()
            if not game:
                game = Game(**game_data)
                db.add(game)
                db.flush()
            games.append(game)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ—Ç—ã (–±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π)
        lots_data = [
            {
                "title": "WoW –∞–∫–∫–∞—É–Ω—Ç —Å —Ä–µ–¥–∫–∏–º–∏ –º–∞—É–Ω—Ç–∞–º–∏",
                "description": "–ê–∫–∫–∞—É–Ω—Ç —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π —Ä–µ–¥–∫–∏—Ö –º–∞—É–Ω—Ç–æ–≤ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π",
                "price": 15000,
                "game_id": games[0].id,
                "seller_id": test_user.id,
                "status": "active",
                "category_id": 1,  # –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            },
            {
                "title": "CS2 Prime Global Elite",
                "description": "–ê–∫–∫–∞—É–Ω—Ç —Å —Ä–∞–Ω–≥–æ–º Global Elite –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Å–∫–∏–Ω–æ–≤",
                "price": 8500,
                "game_id": games[1].id,
                "seller_id": test_user.id,
                "status": "active",
                "category_id": 1,
            },
            {
                "title": "Dota 2 Divine –∞–∫–∫–∞—É–Ω—Ç",
                "description": "–í—ã—Å–æ–∫–∏–π —Ä–∞–Ω–≥ Divine —Å —Ä–µ–¥–∫–∏–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏",
                "price": 12000,
                "game_id": games[2].id,
                "seller_id": test_user.id,
                "status": "active",
                "category_id": 1,
            },
            {
                "title": "Valorant Immortal —Ä–∞–Ω–≥",
                "description": "–ê–∫–∫–∞—É–Ω—Ç —Å —Ä–∞–Ω–≥–æ–º Immortal, –æ—Ç–ª–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                "price": 7500,
                "game_id": games[3].id,
                "seller_id": test_user.id,
                "status": "active",
                "category_id": 1,
            },
        ]

        for lot_data in lots_data:
            existing = db.query(Lot).filter(Lot.title == lot_data["title"]).first()
            if not existing:
                lot = Lot(**lot_data)
                db.add(lot)

        db.commit()
        print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!")
        print(f"üéÆ –ò–≥—Ä: {len(games)}")
        print(f"üì¶ –õ–æ—Ç–æ–≤: {len(lots_data)}")
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: test@example.com / testpass123")

    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()
    finally:
        db.close()


if __name__ == "__main__":
    create_test_data()
